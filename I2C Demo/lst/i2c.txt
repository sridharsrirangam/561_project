; generated by Component: ARM Compiler 5.05 (build 41) Tool: ArmCC [4d0eb9]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\obj\i2c.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\i2c.d --cpu=Cortex-M0+ --apcs=interwork -O0 -Iinc -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMSIS\Include -IC:\Keil_v5\ARM\Inc\Freescale\Kinetis -D__MICROLIB -DMKL25Z128xxx4 --omf_browse=.\obj\i2c.crf src\i2c.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  i2c_init PROC
;;;4      //init i2c0
;;;5      void i2c_init(void)
000000  4899              LDR      r0,|L1.616|
;;;6      {
;;;7      	//clock i2c peripheral and port E
;;;8      	SIM->SCGC4 |= SIM_SCGC4_I2C0_MASK;
000002  6b40              LDR      r0,[r0,#0x34]
000004  2140              MOVS     r1,#0x40
000006  4308              ORRS     r0,r0,r1
000008  4997              LDR      r1,|L1.616|
00000a  6348              STR      r0,[r1,#0x34]
;;;9      	SIM->SCGC5 |= (SIM_SCGC5_PORTE_MASK);
00000c  4608              MOV      r0,r1
00000e  6b80              LDR      r0,[r0,#0x38]
000010  2101              MOVS     r1,#1
000012  0349              LSLS     r1,r1,#13
000014  4308              ORRS     r0,r0,r1
000016  4994              LDR      r1,|L1.616|
000018  6388              STR      r0,[r1,#0x38]
;;;10     	
;;;11     	//set pins to I2C function
;;;12     	PORTE->PCR[24] |= PORT_PCR_MUX(5);
00001a  4894              LDR      r0,|L1.620|
00001c  6a00              LDR      r0,[r0,#0x20]
00001e  2105              MOVS     r1,#5
000020  0209              LSLS     r1,r1,#8
000022  4308              ORRS     r0,r0,r1
000024  4991              LDR      r1,|L1.620|
000026  6208              STR      r0,[r1,#0x20]
;;;13     	PORTE->PCR[25] |= PORT_PCR_MUX(5);
000028  4608              MOV      r0,r1
00002a  6a40              LDR      r0,[r0,#0x24]
00002c  2105              MOVS     r1,#5
00002e  0209              LSLS     r1,r1,#8
000030  4308              ORRS     r0,r0,r1
000032  498e              LDR      r1,|L1.620|
000034  6248              STR      r0,[r1,#0x24]
;;;14     		
;;;15     	//set to 100k baud
;;;16     	//baud = bus freq/(scl_div+mul)
;;;17      	//~400k = 24M/(64); icr=0x12 sets scl_div to 64
;;;18      	I2C0->F = (I2C_F_ICR(0x12) | I2C_F_MULT(0));
000036  2012              MOVS     r0,#0x12
000038  498d              LDR      r1,|L1.624|
00003a  7048              STRB     r0,[r1,#1]
;;;19     	
;;;20     	//enable i2c and set to master mode
;;;21     	I2C0->C1 |= (I2C_C1_IICEN_MASK );
00003c  4608              MOV      r0,r1
00003e  7880              LDRB     r0,[r0,#2]
000040  2180              MOVS     r1,#0x80
000042  4308              ORRS     r0,r0,r1
000044  498a              LDR      r1,|L1.624|
000046  7088              STRB     r0,[r1,#2]
;;;22     }
000048  4770              BX       lr
;;;23     
                          ENDP

                  i2c_start PROC
;;;25     //send start sequence
;;;26     void i2c_start()
00004a  4889              LDR      r0,|L1.624|
;;;27     {
;;;28     	I2C_TRAN;							/*set to transmit mode */
00004c  7880              LDRB     r0,[r0,#2]
00004e  2110              MOVS     r1,#0x10
000050  4308              ORRS     r0,r0,r1
000052  4987              LDR      r1,|L1.624|
000054  7088              STRB     r0,[r1,#2]
;;;29     	I2C_M_START;					/*send start	*/
000056  4608              MOV      r0,r1
000058  7880              LDRB     r0,[r0,#2]
00005a  2120              MOVS     r1,#0x20
00005c  4308              ORRS     r0,r0,r1
00005e  4984              LDR      r1,|L1.624|
000060  7088              STRB     r0,[r1,#2]
;;;30     }
000062  4770              BX       lr
;;;31     
                          ENDP

                  i2c_read_setup PROC
;;;32     //send device and register addresses
;;;33     void i2c_read_setup(uint8_t dev, uint8_t address)
000064  4a82              LDR      r2,|L1.624|
;;;34     {
;;;35     	I2C0->D = dev;			  /*send dev address	*/
000066  7110              STRB     r0,[r2,#4]
;;;36     	I2C_WAIT;							/*wait for completion */
000068  bf00              NOP      
                  |L1.106|
00006a  4a81              LDR      r2,|L1.624|
00006c  78d2              LDRB     r2,[r2,#3]
00006e  2302              MOVS     r3,#2
000070  401a              ANDS     r2,r2,r3
000072  2a00              CMP      r2,#0
000074  d0f9              BEQ      |L1.106|
000076  4a7e              LDR      r2,|L1.624|
000078  78d2              LDRB     r2,[r2,#3]
00007a  431a              ORRS     r2,r2,r3
00007c  4b7c              LDR      r3,|L1.624|
00007e  70da              STRB     r2,[r3,#3]
;;;37     	
;;;38     	I2C0->D =  address;		/*send read address	*/
000080  461a              MOV      r2,r3
000082  7111              STRB     r1,[r2,#4]
;;;39     	I2C_WAIT;							/*wait for completion */
000084  bf00              NOP      
                  |L1.134|
000086  4a7a              LDR      r2,|L1.624|
000088  78d2              LDRB     r2,[r2,#3]
00008a  2302              MOVS     r3,#2
00008c  401a              ANDS     r2,r2,r3
00008e  2a00              CMP      r2,#0
000090  d0f9              BEQ      |L1.134|
000092  4a77              LDR      r2,|L1.624|
000094  78d2              LDRB     r2,[r2,#3]
000096  431a              ORRS     r2,r2,r3
000098  4b75              LDR      r3,|L1.624|
00009a  70da              STRB     r2,[r3,#3]
;;;40     		
;;;41     	I2C_M_RSTART;				   /*repeated start */
00009c  461a              MOV      r2,r3
00009e  7892              LDRB     r2,[r2,#2]
0000a0  2304              MOVS     r3,#4
0000a2  431a              ORRS     r2,r2,r3
0000a4  4b72              LDR      r3,|L1.624|
0000a6  709a              STRB     r2,[r3,#2]
;;;42     	I2C0->D = (dev|0x1);	 /*send dev address (read)	*/
0000a8  2201              MOVS     r2,#1
0000aa  4302              ORRS     r2,r2,r0
0000ac  711a              STRB     r2,[r3,#4]
;;;43     	I2C_WAIT;							 /*wait for completion */
0000ae  bf00              NOP      
                  |L1.176|
0000b0  4a6f              LDR      r2,|L1.624|
0000b2  78d2              LDRB     r2,[r2,#3]
0000b4  2302              MOVS     r3,#2
0000b6  401a              ANDS     r2,r2,r3
0000b8  2a00              CMP      r2,#0
0000ba  d0f9              BEQ      |L1.176|
0000bc  4a6c              LDR      r2,|L1.624|
0000be  78d2              LDRB     r2,[r2,#3]
0000c0  431a              ORRS     r2,r2,r3
0000c2  4b6b              LDR      r3,|L1.624|
0000c4  70da              STRB     r2,[r3,#3]
;;;44     	
;;;45     	I2C_REC;						   /*set to receive mode */
0000c6  461a              MOV      r2,r3
0000c8  7892              LDRB     r2,[r2,#2]
0000ca  2310              MOVS     r3,#0x10
0000cc  439a              BICS     r2,r2,r3
0000ce  4b68              LDR      r3,|L1.624|
0000d0  709a              STRB     r2,[r3,#2]
;;;46     
;;;47     }
0000d2  4770              BX       lr
;;;48     
                          ENDP

                  i2c_repeated_read PROC
;;;49     //read a byte and ack/nack as appropriate
;;;50     uint8_t i2c_repeated_read(uint8_t isLastRead)
0000d4  4601              MOV      r1,r0
;;;51     {
;;;52     	uint8_t data;
;;;53     	
;;;54     	if(isLastRead)	{
0000d6  2900              CMP      r1,#0
0000d8  d006              BEQ      |L1.232|
;;;55     		NACK;								/*set NACK after read	*/
0000da  4a65              LDR      r2,|L1.624|
0000dc  7892              LDRB     r2,[r2,#2]
0000de  2308              MOVS     r3,#8
0000e0  431a              ORRS     r2,r2,r3
0000e2  4b63              LDR      r3,|L1.624|
0000e4  709a              STRB     r2,[r3,#2]
0000e6  e005              B        |L1.244|
                  |L1.232|
;;;56     	} else	{
;;;57     		ACK;								/*ACK after read	*/
0000e8  4a61              LDR      r2,|L1.624|
0000ea  7892              LDRB     r2,[r2,#2]
0000ec  2308              MOVS     r3,#8
0000ee  439a              BICS     r2,r2,r3
0000f0  4b5f              LDR      r3,|L1.624|
0000f2  709a              STRB     r2,[r3,#2]
                  |L1.244|
;;;58     	}
;;;59     	
;;;60     	data = I2C0->D;				/*dummy read	*/
0000f4  4a5e              LDR      r2,|L1.624|
0000f6  7910              LDRB     r0,[r2,#4]
;;;61     	I2C_WAIT;							/*wait for completion */
0000f8  bf00              NOP      
                  |L1.250|
0000fa  4a5d              LDR      r2,|L1.624|
0000fc  78d2              LDRB     r2,[r2,#3]
0000fe  2302              MOVS     r3,#2
000100  401a              ANDS     r2,r2,r3
000102  2a00              CMP      r2,#0
000104  d0f9              BEQ      |L1.250|
000106  4a5a              LDR      r2,|L1.624|
000108  78d2              LDRB     r2,[r2,#3]
00010a  431a              ORRS     r2,r2,r3
00010c  4b58              LDR      r3,|L1.624|
00010e  70da              STRB     r2,[r3,#3]
;;;62     	
;;;63     	if(isLastRead)	{
000110  2900              CMP      r1,#0
000112  d005              BEQ      |L1.288|
;;;64     		I2C_M_STOP;					/*send stop	*/
000114  461a              MOV      r2,r3
000116  7892              LDRB     r2,[r2,#2]
000118  2320              MOVS     r3,#0x20
00011a  439a              BICS     r2,r2,r3
00011c  4b54              LDR      r3,|L1.624|
00011e  709a              STRB     r2,[r3,#2]
                  |L1.288|
;;;65     	}
;;;66     	data = I2C0->D;				/*read data	*/
000120  4a53              LDR      r2,|L1.624|
000122  7910              LDRB     r0,[r2,#4]
;;;67     
;;;68     	return  data;					
;;;69     }
000124  4770              BX       lr
;;;70     
                          ENDP

                  i2c_read_byte PROC
;;;74     //using 7bit addressing reads a byte from dev:address
;;;75     uint8_t i2c_read_byte(uint8_t dev, uint8_t address)
000126  b510              PUSH     {r4,lr}
;;;76     {
000128  4602              MOV      r2,r0
;;;77     	uint8_t data;
;;;78     	
;;;79     	I2C_TRAN;							/*set to transmit mode */
00012a  4b51              LDR      r3,|L1.624|
00012c  789b              LDRB     r3,[r3,#2]
00012e  2410              MOVS     r4,#0x10
000130  4323              ORRS     r3,r3,r4
000132  4c4f              LDR      r4,|L1.624|
000134  70a3              STRB     r3,[r4,#2]
;;;80     	I2C_M_START;					/*send start	*/
000136  4623              MOV      r3,r4
000138  789b              LDRB     r3,[r3,#2]
00013a  2420              MOVS     r4,#0x20
00013c  4323              ORRS     r3,r3,r4
00013e  4c4c              LDR      r4,|L1.624|
000140  70a3              STRB     r3,[r4,#2]
;;;81     	I2C0->D = dev;			  /*1. send dev address	*/
000142  4623              MOV      r3,r4
000144  711a              STRB     r2,[r3,#4]
;;;82     	I2C_WAIT;							/*wait for completion */
000146  bf00              NOP      
                  |L1.328|
000148  4b49              LDR      r3,|L1.624|
00014a  78db              LDRB     r3,[r3,#3]
00014c  2402              MOVS     r4,#2
00014e  4023              ANDS     r3,r3,r4
000150  2b00              CMP      r3,#0
000152  d0f9              BEQ      |L1.328|
000154  4b46              LDR      r3,|L1.624|
000156  78db              LDRB     r3,[r3,#3]
000158  4323              ORRS     r3,r3,r4
00015a  4c45              LDR      r4,|L1.624|
00015c  70e3              STRB     r3,[r4,#3]
;;;83     	
;;;84     	I2C0->D =  address;		/*2. send read address	*/
00015e  4623              MOV      r3,r4
000160  7119              STRB     r1,[r3,#4]
;;;85     	I2C_WAIT;							/*wait for completion */
000162  bf00              NOP      
                  |L1.356|
000164  4b42              LDR      r3,|L1.624|
000166  78db              LDRB     r3,[r3,#3]
000168  2402              MOVS     r4,#2
00016a  4023              ANDS     r3,r3,r4
00016c  2b00              CMP      r3,#0
00016e  d0f9              BEQ      |L1.356|
000170  4b3f              LDR      r3,|L1.624|
000172  78db              LDRB     r3,[r3,#3]
000174  4323              ORRS     r3,r3,r4
000176  4c3e              LDR      r4,|L1.624|
000178  70e3              STRB     r3,[r4,#3]
;;;86     		
;;;87     	I2C_M_RSTART;				   /*repeated start */
00017a  4623              MOV      r3,r4
00017c  789b              LDRB     r3,[r3,#2]
00017e  2404              MOVS     r4,#4
000180  4323              ORRS     r3,r3,r4
000182  4c3b              LDR      r4,|L1.624|
000184  70a3              STRB     r3,[r4,#2]
;;;88     	I2C0->D = (dev|0x1);	 /*3. send dev address (read)	*/
000186  2301              MOVS     r3,#1
000188  4313              ORRS     r3,r3,r2
00018a  7123              STRB     r3,[r4,#4]
;;;89     	I2C_WAIT;							 /*wait for completion */
00018c  bf00              NOP      
                  |L1.398|
00018e  4b38              LDR      r3,|L1.624|
000190  78db              LDRB     r3,[r3,#3]
000192  2402              MOVS     r4,#2
000194  4023              ANDS     r3,r3,r4
000196  2b00              CMP      r3,#0
000198  d0f9              BEQ      |L1.398|
00019a  4b35              LDR      r3,|L1.624|
00019c  78db              LDRB     r3,[r3,#3]
00019e  4323              ORRS     r3,r3,r4
0001a0  4c33              LDR      r4,|L1.624|
0001a2  70e3              STRB     r3,[r4,#3]
;;;90     	
;;;91     	I2C_REC;						   /*set to receive mode */
0001a4  4623              MOV      r3,r4
0001a6  789b              LDRB     r3,[r3,#2]
0001a8  2410              MOVS     r4,#0x10
0001aa  43a3              BICS     r3,r3,r4
0001ac  4c30              LDR      r4,|L1.624|
0001ae  70a3              STRB     r3,[r4,#2]
;;;92     	NACK;									 /*set NACK after read	*/
0001b0  4623              MOV      r3,r4
0001b2  789b              LDRB     r3,[r3,#2]
0001b4  2408              MOVS     r4,#8
0001b6  4323              ORRS     r3,r3,r4
0001b8  4c2d              LDR      r4,|L1.624|
0001ba  70a3              STRB     r3,[r4,#2]
;;;93     	
;;;94     	data = I2C0->D;					/*dummy read	*/
0001bc  4623              MOV      r3,r4
0001be  7918              LDRB     r0,[r3,#4]
;;;95     	I2C_WAIT;								/*wait for completion */
0001c0  bf00              NOP      
                  |L1.450|
0001c2  4b2b              LDR      r3,|L1.624|
0001c4  78db              LDRB     r3,[r3,#3]
0001c6  2402              MOVS     r4,#2
0001c8  4023              ANDS     r3,r3,r4
0001ca  2b00              CMP      r3,#0
0001cc  d0f9              BEQ      |L1.450|
0001ce  4b28              LDR      r3,|L1.624|
0001d0  78db              LDRB     r3,[r3,#3]
0001d2  4323              ORRS     r3,r3,r4
0001d4  4c26              LDR      r4,|L1.624|
0001d6  70e3              STRB     r3,[r4,#3]
;;;96     	
;;;97     	I2C_M_STOP;							/*send stop	*/
0001d8  4623              MOV      r3,r4
0001da  789b              LDRB     r3,[r3,#2]
0001dc  2420              MOVS     r4,#0x20
0001de  43a3              BICS     r3,r3,r4
0001e0  4c23              LDR      r4,|L1.624|
0001e2  70a3              STRB     r3,[r4,#2]
;;;98     	data = I2C0->D;					/*read data	*/
0001e4  4623              MOV      r3,r4
0001e6  7918              LDRB     r0,[r3,#4]
;;;99     
;;;100    	return data;
;;;101    }
0001e8  bd10              POP      {r4,pc}
;;;102    
                          ENDP

                  i2c_write_byte PROC
;;;105    //using 7bit addressing writes a byte data to dev:address
;;;106    void i2c_write_byte(uint8_t dev, uint8_t address, uint8_t data)
0001ea  b510              PUSH     {r4,lr}
;;;107    {
;;;108    	
;;;109    	I2C_TRAN;							/*set to transmit mode */
0001ec  4b20              LDR      r3,|L1.624|
0001ee  789b              LDRB     r3,[r3,#2]
0001f0  2410              MOVS     r4,#0x10
0001f2  4323              ORRS     r3,r3,r4
0001f4  4c1e              LDR      r4,|L1.624|
0001f6  70a3              STRB     r3,[r4,#2]
;;;110    	I2C_M_START;					/*send start	*/
0001f8  4623              MOV      r3,r4
0001fa  789b              LDRB     r3,[r3,#2]
0001fc  2420              MOVS     r4,#0x20
0001fe  4323              ORRS     r3,r3,r4
000200  4c1b              LDR      r4,|L1.624|
000202  70a3              STRB     r3,[r4,#2]
;;;111    	I2C0->D = dev;			  /*send dev address	*/
000204  4623              MOV      r3,r4
000206  7118              STRB     r0,[r3,#4]
;;;112    	I2C_WAIT;						  /*wait for ack */
000208  bf00              NOP      
                  |L1.522|
00020a  4b19              LDR      r3,|L1.624|
00020c  78db              LDRB     r3,[r3,#3]
00020e  2402              MOVS     r4,#2
000210  4023              ANDS     r3,r3,r4
000212  2b00              CMP      r3,#0
000214  d0f9              BEQ      |L1.522|
000216  4b16              LDR      r3,|L1.624|
000218  78db              LDRB     r3,[r3,#3]
00021a  4323              ORRS     r3,r3,r4
00021c  4c14              LDR      r4,|L1.624|
00021e  70e3              STRB     r3,[r4,#3]
;;;113    	
;;;114    	I2C0->D =  address;		/*send write address	*/
000220  4623              MOV      r3,r4
000222  7119              STRB     r1,[r3,#4]
;;;115    	I2C_WAIT;
000224  bf00              NOP      
                  |L1.550|
000226  4b12              LDR      r3,|L1.624|
000228  78db              LDRB     r3,[r3,#3]
00022a  2402              MOVS     r4,#2
00022c  4023              ANDS     r3,r3,r4
00022e  2b00              CMP      r3,#0
000230  d0f9              BEQ      |L1.550|
000232  4b0f              LDR      r3,|L1.624|
000234  78db              LDRB     r3,[r3,#3]
000236  4323              ORRS     r3,r3,r4
000238  4c0d              LDR      r4,|L1.624|
00023a  70e3              STRB     r3,[r4,#3]
;;;116    		
;;;117    	I2C0->D = data;				/*send data	*/
00023c  4623              MOV      r3,r4
00023e  711a              STRB     r2,[r3,#4]
;;;118    	I2C_WAIT;
000240  bf00              NOP      
                  |L1.578|
000242  4b0b              LDR      r3,|L1.624|
000244  78db              LDRB     r3,[r3,#3]
000246  2402              MOVS     r4,#2
000248  4023              ANDS     r3,r3,r4
00024a  2b00              CMP      r3,#0
00024c  d0f9              BEQ      |L1.578|
00024e  4b08              LDR      r3,|L1.624|
000250  78db              LDRB     r3,[r3,#3]
000252  4323              ORRS     r3,r3,r4
000254  4c06              LDR      r4,|L1.624|
000256  70e3              STRB     r3,[r4,#3]
;;;119    	I2C_M_STOP;
000258  4623              MOV      r3,r4
00025a  789b              LDRB     r3,[r3,#2]
00025c  2420              MOVS     r4,#0x20
00025e  43a3              BICS     r3,r3,r4
000260  4c03              LDR      r4,|L1.624|
000262  70a3              STRB     r3,[r4,#2]
;;;120    	
;;;121    }
000264  bd10              POP      {r4,pc}
;;;122    
                          ENDP

000266  0000              DCW      0x0000
                  |L1.616|
                          DCD      0x40048000
                  |L1.620|
                          DCD      0x4004d040
                  |L1.624|
                          DCD      0x40066000

;*** Start embedded assembler ***

#line 1 "src\\i2c.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___5_i2c_c_i2c_init____REV16|
#line 129 "C:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___5_i2c_c_i2c_init____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___5_i2c_c_i2c_init____REVSH|
#line 144
|__asm___5_i2c_c_i2c_init____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
